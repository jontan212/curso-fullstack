package cafeteria;

import configuracionBD.CargarDriver;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import javax.swing.*;
import java.sql.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author manana
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /* -------------- Varibles propias -------------- */
    String urlBD = "jdbc:mysql://localhost/cafetería";
    String usernameBD = "root";
    String passwordBD = "";
    Connection con;

    ArrayList<JButton> productosSeleccionados = new ArrayList<JButton>();

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        // -------------- CARGANDO DRIVER --------------
        try {
            CargarDriver.cargar("com.mysql.jdbc.Driver");
            System.out.println("Driver Cargado");
        } catch (ClassNotFoundException cne) {
            System.out.println("Driver no cargado"
                    + cne.getMessage());
        }
        // -------------- ESTABLECER CONEXIÓN --------------
        try {
            con = DriverManager.getConnection(urlBD, usernameBD, passwordBD);
        } catch (SQLException sqe) {
            System.out.println("Error siguiente: " + sqe.getMessage());
        }

        /* -------------- Camareros -------------- */
        pintarCamareros();
        /* -------------- Mesas -------------- */
        pintarMesas();
        /* -------------- Productos -------------- */
        pintarProductos();
        /* -------------- Productos a pagar -------------- */
//        DefaultTableModel model = (DefaultTableModel) tablaTicket.getModel();
//        for (int i = 1; i <= 10; i++) {
//            model.addRow(new Object[]{i, i, i, i});
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPCamareros = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPSeleccionarCamareros = new javax.swing.JPanel();
        jPMesas = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPSeleccionarMesas = new javax.swing.JPanel();
        jPFacturacion = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel9 = new javax.swing.JPanel();
        numeroMesa = new javax.swing.JLabel();
        tablaTicket = new javax.swing.JTable();
        numeroTicket = new javax.swing.JLabel();
        fechaTicket = new javax.swing.JLabel();
        nombreCamarero = new javax.swing.JLabel();
        precioTotal = new javax.swing.JLabel();
        JBCancelar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPPagarProductos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPElegirProductos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout jPSeleccionarCamarerosLayout = new javax.swing.GroupLayout(jPSeleccionarCamareros);
        jPSeleccionarCamareros.setLayout(jPSeleccionarCamarerosLayout);
        jPSeleccionarCamarerosLayout.setHorizontalGroup(
            jPSeleccionarCamarerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 848, Short.MAX_VALUE)
        );
        jPSeleccionarCamarerosLayout.setVerticalGroup(
            jPSeleccionarCamarerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 558, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPSeleccionarCamareros);

        javax.swing.GroupLayout jPCamarerosLayout = new javax.swing.GroupLayout(jPCamareros);
        jPCamareros.setLayout(jPCamarerosLayout);
        jPCamarerosLayout.setHorizontalGroup(
            jPCamarerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCamarerosLayout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPCamarerosLayout.setVerticalGroup(
            jPCamarerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCamarerosLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Camareros", jPCamareros);

        javax.swing.GroupLayout jPSeleccionarMesasLayout = new javax.swing.GroupLayout(jPSeleccionarMesas);
        jPSeleccionarMesas.setLayout(jPSeleccionarMesasLayout);
        jPSeleccionarMesasLayout.setHorizontalGroup(
            jPSeleccionarMesasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 848, Short.MAX_VALUE)
        );
        jPSeleccionarMesasLayout.setVerticalGroup(
            jPSeleccionarMesasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 558, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(jPSeleccionarMesas);

        javax.swing.GroupLayout jPMesasLayout = new javax.swing.GroupLayout(jPMesas);
        jPMesas.setLayout(jPMesasLayout);
        jPMesasLayout.setHorizontalGroup(
            jPMesasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMesasLayout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPMesasLayout.setVerticalGroup(
            jPMesasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMesasLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jTabbedPane3.addTab("Mesas", jPMesas);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(400, 334));

        numeroMesa.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        numeroMesa.setText("Mesa ");

        tablaTicket.setBackground(new java.awt.Color(255, 255, 255));
        tablaTicket.setForeground(new java.awt.Color(0, 0, 0));
        tablaTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Descripción", "Unidad", "Precio", "Total"}
            },
            new String [] {
                "Descripción", "Unidad", "Precio", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTicket.setToolTipText("");
        tablaTicket.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaTicket.setGridColor(new java.awt.Color(255, 255, 255));
        tablaTicket.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tablaTicket.setSelectionForeground(new java.awt.Color(0, 0, 0));

        numeroTicket.setText("Número de ticket: ");

        fechaTicket.setText("Fecha");

        nombreCamarero.setText("Camarero:");

        precioTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        precioTotal.setText("0.0");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(nombreCamarero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(numeroMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(numeroTicket)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fechaTicket)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(precioTotal)
                .addContainerGap())
            .addComponent(tablaTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(numeroMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nombreCamarero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroTicket)
                    .addComponent(fechaTicket))
                .addGap(18, 18, 18)
                .addComponent(tablaTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addComponent(precioTotal)
                .addGap(417, 417, 417))
        );

        if (tablaTicket.getColumnModel().getColumnCount() > 0) {
            tablaTicket.getColumnModel().getColumn(0).setResizable(false);
            tablaTicket.getColumnModel().getColumn(0).setPreferredWidth(200);
            tablaTicket.getColumnModel().getColumn(1).setResizable(false);
            tablaTicket.getColumnModel().getColumn(2).setResizable(false);
            tablaTicket.getColumnModel().getColumn(3).setResizable(false);
        }

        jScrollPane5.setViewportView(jPanel9);

        JBCancelar.setBackground(new java.awt.Color(255, 51, 51));
        JBCancelar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        JBCancelar.setForeground(new java.awt.Color(255, 255, 255));
        JBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancelarBoton.png"))); // NOI18N
        JBCancelar.setText("Cancelar");
        JBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCancelarActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 255, 51));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/check.png"))); // NOI18N
        jButton2.setText("Generar Ticket");

        jPPagarProductos.setPreferredSize(new java.awt.Dimension(570, 1000));
        jScrollPane2.setViewportView(jPPagarProductos);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPElegirProductos.setPreferredSize(new java.awt.Dimension(570, 1000));
        jScrollPane1.setViewportView(jPElegirProductos);

        javax.swing.GroupLayout jPFacturacionLayout = new javax.swing.GroupLayout(jPFacturacion);
        jPFacturacion.setLayout(jPFacturacionLayout);
        jPFacturacionLayout.setHorizontalGroup(
            jPFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPFacturacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(jPFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPFacturacionLayout.createSequentialGroup()
                        .addComponent(JBCancelar)
                        .addGap(68, 68, 68)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPFacturacionLayout.setVerticalGroup(
            jPFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFacturacionLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPFacturacionLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))
                    .addGroup(jPFacturacionLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))))
        );

        jTabbedPane3.addTab("Facturación", jPFacturacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // AL CERRAR LA VENTANA CERRAMOS LA CONEXIÓN
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            con.close();
            System.out.println("Desconectados de Academia");
        } catch (SQLException sqe) {
            System.out.println(
                    "No se pudo desconectar " + sqe.getMessage());
        }
    }//GEN-LAST:event_formWindowClosing

    private void JBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCancelarActionPerformed
        for (JButton producto : productosSeleccionados) {
            jPPagarProductos.remove(producto);
            jPPagarProductos.updateUI();
        }
    }//GEN-LAST:event_JBCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    /* Pintar los usuarios */
    public void pintarCamareros() {
        jPSeleccionarCamareros.setLayout(new FlowLayout());
        try {
            // CREAR OBJETO STATEMENT
            Statement st = con.createStatement();
            // EJECUTAR SQL
            ResultSet rs = st.executeQuery("SELECT Nombre, ID_Camarero FROM CAMAREROS");
            while (rs.next()) {
                String nombreCamarero = rs.getString("Nombre");
                String idCamarero = rs.getString("ID_Camarero");
                String urlCamarero = "/img/" + idCamarero + ".jpg";
                Color colorFondo = new Color(147, 147, 147);
                Color colorHover = new Color(200, 200, 200);
                JButton btn_camarero = pintarTarjetas(nombreCamarero, urlCamarero, colorFondo, colorHover, 150, 150);
                jPSeleccionarCamareros.add(btn_camarero);
            }
            rs.close();
        } catch (SQLException sqe) {
            System.out.println("Error siguiente: " + sqe.getMessage());
        }
    }

    /* Pintar mesas */
    public void pintarMesas() {
        jPSeleccionarMesas.setLayout(new FlowLayout());
        try {
            // CREAR OBJETO STATEMENT
            Statement st = con.createStatement();
            // EJECUTAR SQL
            ResultSet rs = st.executeQuery("SELECT * FROM MESAS");
            while (rs.next()) {
                Color colorFondo = rs.getInt("Estado") == 0 ? Color.GREEN : Color.ORANGE;
                JButton mesa = pintarTarjetas(rs.getNString("ID_Mesa"), "/img/imgMesa.png", colorFondo, Color.PINK, 150, 150);
                mesa.setFont(new Font("Serif", Font.BOLD, 30));
                jPSeleccionarMesas.add(mesa);
            }
            rs.close();
        } catch (SQLException sqe) {
            System.out.println("Error siguiente: " + sqe.getMessage());
        }
    }

    /* Pintar productos */
    public void pintarProductos() {
//        jPElegirProductos.setLayout(new FlowLayout());
        try {
            // CREAR OBJETO STATEMENT
            Statement st = con.createStatement();
            // EJECUTAR SQL
            ResultSet rs = st.executeQuery("SELECT * FROM PRODUCTOS");
            while (rs.next()) {
                String url = "/img/" + rs.getString("ID_PRODUCTO") + ".jpg";
                String nombreProducto = rs.getString("Nombre_Producto");
                JButton producto = pintarTarjetas(nombreProducto, url, Color.WHITE, Color.orange, 100, 100);
                producto.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent ae) {
                        pintarProductoPagar(nombreProducto, url);
                    }
                });
                jPElegirProductos.add(producto);
            }
            rs.close();
        } catch (SQLException sqe) {
            System.out.println("Error siguiente: " + sqe.getMessage());
        }
    }

    /* Pintar productos a pagar */
    public void pintarProductoPagar(String nombre, String url) {
        JButton producto = new JButton(nombre);
        producto.setSize(jPPagarProductos.getWidth(), 50);
        producto.setIcon(new ImageIcon("src" + url));
        producto.setBackground(Color.WHITE);
        producto.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                AbstractButton button = (AbstractButton) e.getSource();
                Color colorActual = button.getBackground();

                if (colorActual == Color.WHITE) {
                    productosSeleccionados.add(producto);
                    anadirProductoAlTicket(button.getText());
                } else {
                    // ELIMINAR PRODUCTO DE LA TABLA DEL TICKET
                    eliminarProductoDelTicket(button.getText());
                    // ELIMINAR PRODUCTO DE LA LISTA AL DESELECCIONAR
                    Iterator itr = productosSeleccionados.iterator();
                    while (itr.hasNext()) {
                        JButton x = (JButton) itr.next();
                        if (x == producto) {
                            itr.remove();
                        }
                    }
                }
                producto.setBackground(colorActual == Color.GREEN ? Color.WHITE : Color.GREEN);
                jPPagarProductos.revalidate();
            }
        });
        jPPagarProductos.add(producto);
        jPPagarProductos.revalidate();
    }

    /* Añadir producto al ticket */
    public void anadirProductoAlTicket(String nombreProducto) {
        DefaultTableModel model = (DefaultTableModel) tablaTicket.getModel();
        try {
            // CREAR OBJETO STATEMENT
            Statement st = con.createStatement();
            // EJECUTAR SQL
            ResultSet rs = st.executeQuery("SELECT * FROM PRODUCTOS WHERE Nombre_Producto=" + "'" + nombreProducto + "'");
            rs.next();
            float precio = rs.getFloat("Precio");
            float[] valores = recuperarUnidadyTotal(nombreProducto);
            if (valores == null) {
                model.addRow(new Object[]{nombreProducto, 1, precio, precio * 1});
            } else {
                float unidades = valores[0] + 1;
                int fila = (int) valores[1];
                /* Meter las unidades */
                tablaTicket.setValueAt(unidades, fila, 1);
                /* Meter precio total */
                tablaTicket.setValueAt(unidades * precio, fila, 3);
            }
            rs.close();
        } catch (SQLException sqe) {
            System.out.println("Error siguiente: " + sqe.getMessage());
        }
    }

    /* Eliminar producto del ticket*/
    public void eliminarProductoDelTicket(String nombreProducto) {
        float[] unidadYFila = recuperarUnidadyTotal(nombreProducto);
        float unidad = unidadYFila[0] - 1;
        int fila = (int) unidadYFila[1];
        float precio = (float) tablaTicket.getValueAt(fila, 2);
//        System.out.println(unidadYFila[0] + " unidades: " + unidad + ", fila: " + fila + ", " + ", precio: " + precio);
        tablaTicket.setValueAt(unidad, fila, 1);
        tablaTicket.setValueAt(precio * unidad, fila, 1);
    }

    public float[] recuperarUnidadyTotal(String nombreProducto) {
        float[] valores = null;
        for (int i = 1; i < tablaTicket.getRowCount(); i++) {
            String nombreFila = (String) tablaTicket.getValueAt(i, 0);
            if (nombreProducto.equalsIgnoreCase(nombreFila)) {
                valores = new float[3];
                float unidad = Float.parseFloat(tablaTicket.getValueAt(i, 1) + "");
                valores[0] = unidad;
                valores[1] = i;
            }
        }
        return valores;
    }

    /* Crear tarjetas */
    public JButton pintarTarjetas(String nombre, String url, Color colorFondo, Color colorHover, int ancho, int alto) {
        JButton btnTarjeta = new JButton(nombre);
        // ESTILOS
        btnTarjeta.setSize(ancho, alto);
        btnTarjeta.setContentAreaFilled(false);
        btnTarjeta.setIcon(setIcono(url, btnTarjeta));
        btnTarjeta.setIconTextGap(5);
        btnTarjeta.setHorizontalTextPosition(SwingConstants.CENTER);
        btnTarjeta.setVerticalTextPosition(SwingConstants.BOTTOM);
        btnTarjeta.setOpaque(true);
        btnTarjeta.setBackground(colorFondo);
        // ESTILOS HOVER Y CLICK
        btnTarjeta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                super.mouseEntered(evt);
                btnTarjeta.setBackground(colorHover);
            }

            public void mouseExited(MouseEvent evt) {
                super.mouseExited(evt);
                btnTarjeta.setBackground(colorFondo);
            }
        });
        return btnTarjeta;
    }

    /* Renderizado automático deo tamaño de las imágenes de los botones */
    public Icon setIcono(String url, JButton boton) {
        ImageIcon icon = new ImageIcon(getClass().getResource(url));
        int ancho = boton.getWidth();
        int alto = boton.getHeight();
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));
        return icono;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBCancelar;
    private javax.swing.JLabel fechaTicket;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPCamareros;
    private javax.swing.JPanel jPElegirProductos;
    private javax.swing.JPanel jPFacturacion;
    private javax.swing.JPanel jPMesas;
    private javax.swing.JPanel jPPagarProductos;
    private javax.swing.JPanel jPSeleccionarCamareros;
    private javax.swing.JPanel jPSeleccionarMesas;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel nombreCamarero;
    private javax.swing.JLabel numeroMesa;
    private javax.swing.JLabel numeroTicket;
    private javax.swing.JLabel precioTotal;
    private javax.swing.JTable tablaTicket;
    // End of variables declaration//GEN-END:variables
}
